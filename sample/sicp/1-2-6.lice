
; SICP 1.2.6
; (load-file "sample/sicp/1-2-6.lice")

(def exp-mod a b m (|>
  (-> ret 1)

  (while (!= 0 b) (|>

    (if (!= 0 (& b 1))
      (-> ret (% (* a ret) m)))
    ; (println "b = " b)
    (-> b (/ b 2))
    (-> a (% (* a a) m))))
  ret))


; (println "result: " (exp-mod 23 2 6))

; try fermat test
(def try-it a n
  (== (exp-mod a n n) a))

; fermat test
(def fermat-test n
  (try-it (+ 1 (rand (- n 1))) n))

; printing the result
(def say n
  (println n " => " (fermat-test n)))

; tests
(|>
  (say 101)
  (say 233)
  (say 777)
  (say 666)
  ()
)

