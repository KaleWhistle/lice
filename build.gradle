group 'org.lice'
version '3.2.0'

buildscript {
	ext.kotlin_version = '1.2.10'
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
	}

}

apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'jacoco'

sourceCompatibility = 1.6
targetCompatibility = 1.6

repositories {
	mavenCentral()
}

sourceSets {
	main.kotlin.srcDirs += 'src/main/kotlin'
	main.java.srcDirs += 'src/main/java'
	test.kotlin.srcDirs += 'src/test/kotlin'
	test.java.srcDirs += 'src/test/java'
}

configurations {
	library
}

dependencies {
	compile group: 'org.jetbrains', name: 'annotations', version: '15.0'
	compile "org.jetbrains.kotlin:kotlin-stdlib-jre8:$kotlin_version"

	configurations.compile.extendsFrom(configurations.library)
	testCompile group: 'junit', name: 'junit', version: '4.12'
	testCompile "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"
}

tasks.withType(JavaCompile) {
	options.encoding = 'UTF-8'
}

jar {
	manifest { attributes 'Main-Class': 'org.lice.repl.Main' }
}

task fatJar(type: Jar) {
	classifier = 'all'
	description 'Assembles a jar archive containing the main classes and all the dependencies.'
	group 'build'
	baseName = project.name + '-all'
	from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
	manifest { attributes 'Main-Class': 'org.lice.repl.Main' }
	with jar
}

task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = 'sources'
	description 'Assembles a jar archive containing the source code of this project.'
	group 'build'
	from sourceSets.main.allSource
}

artifacts {
	archives jar
	archives fatJar
	archives sourcesJar
}

jacocoTestReport {
	reports {
		xml.enabled true
		html.enabled false
	}
}

check.dependsOn jacocoTestReport
